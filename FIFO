#include <stdio.h>
#include <stdlib.h>
#define MAX_SIZE 10
struct Queue {
    int arr[MAX_SIZE];
    int front, rear;};
void initializeQueue(struct Queue* queue) {
    queue->front = -1;
    queue->rear = -1;}
int isEmpty(struct Queue* queue) {
    return (queue->front == -1 && queue->rear == -1);}
int isFull(struct Queue* queue) {
    return (queue->rear + 1) % MAX_SIZE == queue->front;}
void enqueue(struct Queue* queue, int data) {
if (isFull(queue)) {
        printf("Queue is full. Cannot enqueue %d\n", data);
        return;   }
    if (isEmpty(queue)) {
        queue->front = queue->rear = 0;   } else {
        queue->rear = (queue->rear + 1) % MAX_SIZE;  }
    queue->arr[queue->rear] = data;}
int dequeue(struct Queue* queue) {
    if (isEmpty(queue)) {
        printf("Queue is empty. Cannot dequeue.\n");
        return -1;}
int data = queue->arr[queue->front];
    if (queue->front == queue->rear) {
        initializeQueue(queue);    } else {
        queue->front = (queue->front + 1) % MAX_SIZE;  }
    return data;}
void displayQueue(struct Queue* queue) {
    if (isEmpty(queue)) {
        printf("Queue is empty.\n");
        return;}
